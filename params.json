{"name":"Funfun","tagline":"fun function project for visualisation functions","body":"<html>\r\n <head>\r\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n  <style>\r\n    html,body {margin:10; background-color: #004000;}\r\n  </style>\r\n  <meta name=\"description\" content=\"This program is made for students who are tired to draw implicit functions.\">\r\n   <title>\r\n   FUNpainterFunction\r\n  </title>\r\n\r\n </head>\r\n\r\n<body style=\"margin:0; background: linear-gradient(#000000, #004000) repeat; \">\r\n <table>\r\n  <tbody>\r\n   <tr>\r\n       <td>\r\n\t   <div id=\"divPanels\" style=\"position: absolute; left:0px; z-index:10;\" onmouseover=\"divPanelsEnter()\">\r\n  \t\t   <label class=\"labelnum\" style=\"color: white; font-weight: bold;\" for=\"cb1\">Inverse Color Map:</label> \r\n\t\t    <input type='checkbox' id='cb1' onchange='setDrawMethod(this);' style=\"color: red; font-weight: bold; background-color: rgba(0,0,255,0.5)\"/>\r\n          <br>\r\n          <br>\r\n\t       <label class=\"labelnum\" style=\"border: none; font-size:14px;color:#999999; background: linear-gradient(rgba(0,32,0,0.5), rgba(200,200,200,0.5));font-weight: bold; width: 315px;\" for=\"data\">\r\n\t\t   Your Labeled Data[        ]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp; :\r\n\t\t   </label> \r\n\t\t   <br>\r\n\t   \t   <textarea id=\"data\" style=\"border: none; font-size:14px;color:#999999;background: linear-gradient(rgba(200,200,200,0.5), rgba(0,32,0,0.5));font-weight: bold;\" rows=\"10\" cols=\"37\" autofocus onkeypress=\"updateDataIf(event)\">\r\nA=&#013;[0,20,10,10,-20,5,12,-5,30,45,-40,35]&#013;\r\nB=&#013;[20,0,-10,-10,20,-5,-12,5,45,30,40,-35]&#013;\r\nvar L1=[10,20,-30,40]&#013;\r\nvar A1=[0,20,10,10,30,45,-40,35]&#013;\r\nvar A2=[30,45,-40,35]&#013;\r\nvar A3=[0,20,10,10]&#013;\r\n//time(-30,10)\r\n\r\n\t\t   </textarea>\r\n\t\t   \r\n\t\t   <br>\r\n\t\t<select class=\"funlist\" id=\"fs\" type=\"text\" onchange=\"debug.value = fs.value; evalAndDraw()\" style=\"color:blue; line-height: 20px; font-size:14px; background: linear-gradient(rgba(200,200,200,0.5), rgba(0,32,0,0.5)); font-weight: bold; width: 315px;\">\r\n\t\t<option value=\"sin(x)*x-y*cos(y)\">\r\n                    Your Function\r\n                </option>\r\n                <option value=\"y = x*x\">\r\n                    y = x*x\r\n                </option>\r\n                <option value=\"5*sin(x)=y\">\r\n                   5*sin(x) = y\r\n                </option>\r\n                <option value=\"x2=x*x,&#013;(x2+(y-abs(x))*(y-cbrt(x2))-1000)*&#013;polylines(A,x,y)\">\r\n                    Hearts Lines\r\n                </option>\r\n                <option value=\"P(A,x,y)\">\r\n                    Repulsing Points \r\n                </option>\r\n                <option value=\"R(A,x,y)\">\r\n                    Radial Function - Revealing Sticky Points \r\n                </option>\r\n\r\n                <option value=\"(x*x + y*y) *(x*x + y*y) - (2*100 + 1000)*x*x + (2*100 - 1000)*y*y\">\r\n                    Lemniscate of Booth\r\n                </option>\r\n                <option value=\"(x*x + y*y) *(x*x + y*y) - 1000*(x*x - y*y)\">\r\n                    lLemniscate of Bernoulli\r\n                </option>\r\n                <option value=\"27*2*y*y - (2 - x)*(8*2 + x)*(8*2 + x)\">\r\n                    Tschirnhausen cubic\r\n                </option>\r\n                <option value=\"x2=x*x,&#013; x2+(y-abs(x))*(y-cbrt(x2))=1000\">\r\n                    Love Formula (Формула любви)\r\n                </option>\r\n                <option value=\"r=hyp(x,y),d=(1-r/50),&#013;y/=d,&#013;x/=d,&#013;x2=x*x,&#013;min((x2+(y-abs(x))*(y-cbrt(x2))-1000),(x%10)*(y%10))\">\r\n                    Heartless World (Hurt)\r\n                </option>\r\n                <option value=\"x*x*x +6 -y*y*sin(y)\">\r\n                    Spiral of Litvinenko-Ursol\r\n                </option>\r\n                <option value=\"x*x*x +6 -y*x*sin(y)\">\r\n                    Spiral of Litvinenko-Ursol 2\r\n                </option>\r\n                <option value=\"min(abs(x),abs(y))-10/(sin(x*x)-y*y*y)\">\r\n                    Глухова 1\r\n                </option>\r\n                <option value=\"min(x*x-y*y)-x*x*x/sin(y+x)\">\r\n                    Глухова 2\r\n                </option>\r\n                <option value=\"x*x*x+6-y*cos(y)*x\">\r\n                    Литвиненко 1\r\n                </option>\r\n                <option value=\"x*x*x+6-y*sin(y)*y\">\r\n                    Литвиненко 2\r\n                </option>\r\n                <option value=\"pow(x,x)*x-y*x-y*y\">\r\n                    Литвиненко 3\r\n                </option>\r\n                <option value=\"sin(x*y)-e(y-10)+max(x,y-10)\">\r\n                    Литвиненко 4\r\n                </option>\r\n                <option value=\"sin(x*y)=e(y)\">\r\n                    Литвиненко 5\r\n                </option>\r\n                <option value=\"sin(x)=cos(y)\">\r\n                    Литвиненко 6\r\n                </option>\r\n                <option value=\"r=hyp(x*x,y*y),d=1-r/50,&#013;x/=d, y/=d,&#013;sin(x)=cos(y)\">\r\n                    Литвиненко 7\r\n                </option>\r\n                <option value=\"sin(x-y*y-x)*x-y\">\r\n                    Литвиненко 8\r\n                </option>\r\n                <option value=\"sqrt(sin(x*y)/cos(x*y))\">\r\n                    Сима 1\r\n                </option>\r\n                <option value=\"sqrt(sin(x)-cos(y))\">\r\n                    Сима 2\r\n                </option>\r\n                <option value=\"y*y/x-x*x/y\">\r\n                    Cима 3\r\n                </option>\r\n                <option value=\"x*x*x*x*x*x*x*x/y-y*y*y*y*y*y*y*y/x\">\r\n                    Cима 4\r\n                </option>\r\n                 <option value=\"r=hyp(x,y),&#013;y/=(1-(r+sin(r))/50),&#013;x/=(1-(r+cos(r))/50),&#013;x2=x*x+100*sin(x)*cos(y),&#013;min((x2+(y-abs(x))*(y-cbrt(x2))-1000),(x%10-5)*(y%10-5))\">\r\n                   Heart Break Thrue Worlds \r\n                </option>\r\n                <option value=\"r=hyp(x,y),a=arg(x,y), a+=(a<0)?2*pi:0, &#013;a*=2,&#013; r-32*cos(a)\">\r\n                    Polar functions: Sleeping Eight \r\n                </option>\r\n                <option value=\"r=hyp(x,y),a=arg(x,y),a+=(a<0)?2*pi:0, &#013; r-32*cos(5*a)\">\r\n                    Polar functions: Flower \r\n                </option>\r\n                <option value=\"r=hyp(x,y),a=arg(x,y), a+=(a<0)?2*pi:0,&#013; ( r-32*cos(8*a)) *(r-32)\">\r\n                    Polar functions: Wheel \r\n                </option>\r\n                <option value=\"r=hyp(x,y),a=arg(x,y), a+=(a<0)?2*pi:0,&#013;  2*10*(1+cos(a))=r\">\r\n                    Polar functions: Cardioid\r\n                </option>\r\n\r\n          </select>\r\n\t           <br>\r\n\t  <textarea id=\"debug\" style=\"border: none; font-size:14px; color:white; background: linear-gradient(rgba(200,200,200,0.5), rgba(0,32,0,0.5));font-weight: bold;\" rows=\"10\" cols=\"37\" autofocus onkeypress=\"testKey(event)\">sin(x)*x-y*cos(y)</textarea>\t   \r\n\t\t  <br>\r\n          <br>\r\n          <br>\r\n          <input class=\"button\" type=\"button\" value=\"Press and Wait for Result\" onclick=\"evalAndDraw();\" style=\"background: linear-gradient(to bottom right, rgba(0,0,200,0.5), rgba(200,0,0,0.5)); color: #AAFFAA;\">\r\n\t\t  <br>\r\n          <br>\r\n\t\t   <input class=\"inputnum\" style=\"visibility: hidden;color: red; font-weight: bold; background-color: rgba(0,0,255,0.5)\"  id=\"x1\" type=\"text\" value=\"16\" onkeyup=\"testThicknessKey(event)\" onwheel=\"testWheel(event)\">           \r\n\t\t   <br>\r\n\t\t   <input class=\"inputnum\" type=\"button\" value=\"<<\" onclick=\"scalebAndDraw(0.5);\" style=\"color: red;font-weight: bold; background-color: rgba(0,0,255,0.5)\">\r\n\t\t   <label class=\"labelnum\" style=\"color: red;font-weight: bold;\" for=\"x1\">Thickness parameter:</label> \r\n\t\t   <input class=\"inputnum\" type=\"button\" value=\">>\" onclick=\"scalebAndDraw(2);\" style=\"color: red; font-weight: bold; background-color: rgba(0,0,255,0.5)\">\r\n\t\t   <br>\r\n         <pre class=\"labelnum\" style=\"color: white;\">\r\n       sin(x)   cos(y)   tg(x)     \r\n       sh(y)    ch(x)    th(y)\r\n       ash(x)   ach(y)   ath(y)\t   \r\n       sqrt(x)  cbrt(y)  pow(x,y)    \r\n       e(x)     ln(y)    abs(x) \r\n       max(x,y) min(y,x)  sgn(x)  \r\n       hyp(x,y) arg(x,y)\r\n       rho(x0,y0, x,y)   \r\n       R([x0,y0, x1,y1, ...], x,y)\r\n       P([x0,y0, x1,y1, ...], x,y)\r\n       line(x0,y0, x1,y1, x,y) \r\n       lin(L, x,y) \r\n       polylines([x0,y0,..], x,y)\r\n       E=2.718281828....\r\n       pi=3.1415926.....\r\n       sqrt2=1.41.....\r\n       </pre>\r\n\t   <div>\r\n        </td>\r\n        <td>\r\n\t\t<div id=\"divcanvas\" style=\"position: absolute; left:20px;\">\r\n        <canvas width=\"1000\" height=\"1000\" id=\"x\" onmousedown=\"canvasMouseDown(event)\" onmousemove=\"moveDiv(event)\" onwheel=\"testWheel(event)\">\r\n          If You see this text then You use old browser.\r\n        </canvas>\r\n\t\t</div>\r\n       </td>\r\n\r\n    </tr>\r\n</tbody></table>\r\n <div id=\"box-shadow-div\" style=\"position: fixed; width: 80px; height: 20px; border-radius: 20%; background-color:#00AA00AA; color:green; /*box-shadow: 0 0 1px 1px green;*/ top: 0;left: 0;\">Hello</div>\r\n <script>\r\n 'use strict';\r\n      var sin = Math.sin;\r\n      var cos = Math.cos;\r\n      var sqrt = Math.sqrt;\r\n      var cbrt = Math.cbrt;\r\n      var pow = Math.pow;\r\n\t  var hyp = Math.hypot;\r\n\t  var rho = function(x0,y0,x,y){ return hyp((x-x0),(y-y0))-0.25}\r\n  \t  var R = function(PA,x,y){var r=1; var ll=PA.length; for(let i=0; i<ll; i+=2){let ri=hyp((x-PA[i]),(y-PA[i+1]))-0.25; r*=ri;} return r}\t  \r\n\t  var P = function(PA,x,y){var r=-2e256; var ll=PA.length; for(let i=0; i<ll; i+=2){let ri=1/4-hyp((x-PA[i]),(y-PA[i+1])); if(r<ri)r=ri;} return r}\t  \r\n      var tg = Math.tan;\r\n      var ln=  Math.log;\r\n      var e=  Math.exp;\r\n      var abs=  Math.abs;\r\n      var sgn=  Math.sign;\r\n      var max=  Math.max;\r\n      var min=  Math.min;\r\n\t  var ch= Math.cosh;\t\r\n\t  var sh= Math.sinh;\t\r\n      var th= Math.tanh;\t\r\n      var ach= Math.acosh;\t\r\n      var ash= Math.asinh;\t\r\n      var ath= Math.atanh;\r\n\t  var arg = function(x,y){ return Math.atan2(y,x)}\r\n\r\n// (x-x0)/(x1-x0)=(y-y0)/(y1-y0)\r\n// (-y1+y0)x  +(-x0+x1)y + y1x0-x1y0   \r\n\r\n     var line = function(x0,x1, y0,y1, x,y){var A=(-y1+y0); var B=(-x0+x1); var D=y1*x0-x1*y0; var N=hyp(A,B); var a=A/N; var b=B/N; var d=D/N; return (a*x+b*y+d); }\r\n\t var lin = function(L, x,y){var A=(-L[3]+L[1]); var B=(-L[0]+L[2]); var D=L[3]*L[0]-L[2]*L[1]; var N=hyp(A,B); var a=A/N; var b=B/N; var d=D/N; return (a*x+b*y+d)}  \r\n\t var polylines = function(L, x,y){var r=2e256; var ll=L.length-2; var x0=L[0],y0=L[1],x1=L[2], y1=L[3]; var ri=0;\r\n\t                                  var A, B, D, N,a,b,d;\r\n  \t                                  for(let i=0; i<ll; i+=2)\r\n\t\t\t\t\t\t\t\t\t    {\r\n\t\t\t\t\t\t\t\t\t\t A=(-y1+y0); B=(-x0+x1); D=y1*x0-x1*y0; N=hyp(A,B); a=A/N; b=B/N; d=D/N;\r\n \t  \t\t\t\t\t\t\t\t\t  ri=(a*x+b*y+d);\r\n\t\t\t\t\t\t\t\t\t\t   if(ri<0)ri=-ri;\r\n \t\t\t\t\t\t\t\t\t\t    ri-=1/8;\r\n\t\t\t\t\t\t\t\t\t\t\t if(r>ri)r=ri;\r\n\t\t\t\t\t\t\t\t\t\t\t  x0=x1;y0=y1;x1=L[4+i];y1=L[5+i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn r;\r\n\t\t\t\t\t\t\t\t\t}  \r\n\r\nvar E=Math.E;          // returns Euler's number\r\nvar pi=Math.PI;         // returns PI\r\nvar sqrt2=Math.SQRT2;      // returns the square root of 2\r\nvar sqrt1_2=Math.SQRT1_2;    // returns the square root of 1/2\r\nvar ln2=Math.LN2;        // returns the natural logarithm of 2\r\nvar ln10=Math.LN10;       // returns the natural logarithm of 10\r\nvar log2e=Math.LOG2E;      // returns base 2 logarithm of E\r\nvar log10e=Math.LOG10E;     // returns base 10 logarithm of E\r\n\r\nvar A = [0,20, 10,10, -20,5, 12,-5, 30,45, -40,35];\r\nvar B = [20,0, -10,-10, 20,-5, -12,+5, 45,30, 40,-35];\r\nvar L1=[10,20,-30,40];\r\nvar A1=[0,20,10,10,30,45,-40,35];\r\nvar A2=[30,45,-40,35];\r\nvar A3=[0,20,10,10];\r\n\r\n     var w=1000;\r\n\t var h=1000;\r\n     var w_2 = w/2;\r\n     var h_2 = h/2;\r\n\r\n\t var l=w*h;\r\n     var zm = 10;\r\n\t var mechecked=false;\r\n\t \r\n\t \r\n\t var Fbuffer = new ArrayBuffer(8*l);\r\n     var F = new Float64Array(Fbuffer);\r\n\t var f = function(x,y){ return 0;}\r\n\t \r\n\t var ggbuf = new ArrayBuffer(l);\r\n\t var G =  new Uint8ClampedArray(ggbuf);\r\n \t\r\n    var a, b=16, c;\r\n    var cf = document.getElementById('x');\r\n\tvar aData = document.getElementById('data');\r\n    var debug = document.getElementById('debug');\r\n    var fs = document.getElementById('fs');\r\n    var x1 = document.getElementById(\"x1\");\r\n   \r\n    var ctext  = cf.getContext('2d');\r\n\t     ctext.fillStyle = \"#0F0\";\r\n         ctext.font = \"italic 8pt Arial\";\r\n\r\n\t var imageData = ctext.getImageData(0, 0, w, h);\r\n      var data = imageData.data;\r\n      \r\n       var d32=new Uint32Array(data.buffer);\r\n\t\r\n\t\r\n   var x,y;\r\n    function fun(a){\r\n\tvar myeval=eval;\r\n       try{\r\n\t       //myeval(a);\r\n\t\t }\r\n\t  catch(e){ debug.value+= (\" \"+e); return;} \r\n\t\t  \r\n\t\tvar la=a.length; \r\n\t\tvar b=a;  \t    \r\n\t    var i=0|0;\r\n        var i1=0|0;\r\n\t\tvar cc=0; \r\n\t\t  i=a.lastIndexOf(\",\"); //search last ',' in expressions such as \"x/=10, y*=2, x*x=y  \"\r\n\t     {\r\n\t\t   i=++i;\r\n\t        b=(a.substr(i)).trim();        //ought to be like b=\"x*x=y\"\r\n\r\n\t\t\t  var bnew=b; \t\t\r\n\t\t\t   var lb=b.length;\r\n              var j=0;\t\t   \r\n\t\t\t   while(true)\r\n\t\t\t\t {\r\n\t\t\t\t  j = b.indexOf(\"=\",j);  //search \"=\"\r\n\t\t\t\t   if(j<0) break; // if \"=\" is absent then we have implicit expression like \"x*x-y\" -- break while loop and proceed as usual\r\n\t\t\t\t   // else   test on cases with \"==\" or \"===\"\r\n\t\t\t\t\t if(j+1<lb && b[j+1]===\"=\")\r\n\t\t\t\t\t   {\r\n\t\t\t\t\t    while(j<lb && b[j]===\"=\"){++j;}\r\n\t\t\t\t\t\t continue;  \r\n\t\t\t\t\t   }\r\n\t\t\t\t     else {    // if we found true \"=\"\r\n                            var b1=\"(\"+b.substring(0,j)+\")\";\r\n                            var b2=\"(\"+b.substring(j+1)+\")\";\r\n\t\t\t\t\t\t     bnew=b1+\"-\"+b2; \t\t\r\n\t\t\t\t\t\t      a=a.substring(0,i)+bnew;\r\n                              break;      \t\t\t\t\t  \r\n\t\t\t\t          }\r\n\t\t\t    }\r\n\t\t  }\r\n\t\t//debug.value = a;  \r\n\t\tconsole.log(\" a=%s\",a);\r\n        var str = `f=function(x,y){return(${a})}`\r\n\t\t  try{\r\n\t\t      myeval(a);\r\n               myeval(str);  // f = function(x , y) { return  (sin(x)*x-y*cos(y)) ; } \r\n\t\t\t }\r\n\t\t  catch(e){ debug.value+= (\" \"+e);} \r\n    }\r\n\r\n   function g(x, m) {return (abs(x%m)<1/8)?80 : (abs((x*10)%m)<1)?40 : 0; }\r\n   //function g(x, m) {x-=5;if(x<0)x=-x;var s=(x%m-5);if(s<0)s=-s; if(s<0.001)return 64; return 0 }\r\n   //function g(x, m) {if(x<0)x=-x;return (1-sgn(x%m))<<6}\r\n   var zm=10;\r\n   \r\n   function grid(m){\r\n        var i, j ;\r\n\t\tvar x,y;  \r\n        var gx,gy;  \r\n\r\n\r\n         var c = 0; \r\n        for(i = 0; i < h; i++){\r\n            y = (-i + h_2)/zm;\r\n\t\t\t//y/=(1-abs(y)/50);\r\n             if(i==h_2)gy = 160;else gy=g(y, m);\r\n            \r\n            for(j = 0; j < w; j++){\r\n                x = (j - w_2)/zm;\r\n\t\t\t//\t if(i==h_2)gy = 160;else gy=g(y, m);\r\n                 if(j==h_2)gx = 160;else gx=g(x, m);\r\n\t\t\t\t  var gg=(gx+gy);\r\n\t\t\t\t   G[c]=gg;\r\n\t\t\t\td32[c]=\r\n\t\t\t\t        255       << 24 \r\n \t\t\t\t\t    |G[c]     <<  8 \r\n\r\n\t\t\t\tc++; \r\n            }\r\n        }\r\n\t\tctext.putImageData(imageData, 0, 0);\r\n    }\r\n    grid(10);\r\n\r\n\tfunction preEval()\r\n\t{\r\n\t  \r\n\t var i,j,k;\r\n\t var x,y;\r\n\t \r\n\t  console.log(\"preEval() ...a=\"+a);\r\n\t   fun(a);\r\n\t   console.log(\" ...f=\"+f);\r\n\t   \r\n\t   console.time(\"preEvalTime\");\r\n\t   // console.profile(\"ProfilepreEval\"); \r\n\t    i=0;j=0;\r\n\t\t x =  (j - w_2)/zm; \r\n\t     y = -(i - h_2)/zm; \r\n\t   for(let k=0; k<l; ++k)\r\n\t   {\r\n          F[k] = f(x,y);\r\n \t       if(j==w-1)\r\n\t\t\t { \r\n\t\t\t    j=0;\r\n\t\t\t \t++i;\r\n\t\t\t\t y = (-i + h_2)/zm; \r\n\t\t\t }\r\n\t\t   else\r\n\t\t\t {\r\n\t\t\t  ++j\r\n\t\t\t }\r\n\t\t   x = (j - w_2)/zm; \r\n\t   }\r\n\t //  console.profileEnd(\"ProfilepreEval\"); \r\n\t  console.timeEnd(\"preEvalTime\"); \r\n\t}\r\n\r\n\r\nvar sdec=\r\n`function dec(b)\r\n\t{\r\n        var  z, v, vv;\r\n        b=16/b;\r\n\t\tfor(let k=0; k<l; ++k)\r\n\t\t{\r\n                 z = F[k];\r\n                  v = z*b;\r\n                 if(z > 0)\r\n\t\t\t\t {\r\n\t\t\t\t\tvv = 255-v;\r\n\t\t\t\t\tvv= (vv<40)?40:vv;\r\n\t\t\t\t    d32[k]=\r\n\t\t\t\t\t        255 << 24 \r\n                            |0 << 16 \r\n\t\t\t\t\t\t\t|G[k] << 8\r\n\t\t\t\t\t\t    |vv            \r\n                    \r\n                 }\r\n                 else\r\n\t\t\t\t  {\r\n\t\t\t\t\tvv = 255+v;\r\n\t\t\t\t\t vv= (vv<40)?40:vv;\r\n \t\t\t\t\t d32[k]=\r\n                            255 << 24   \r\n\t\t\t\t\t\t    |vv  << 16           \r\n                            |G[k] << 8\r\n\r\n                  }\r\n\t\t}\r\n        ctext.putImageData(imageData, 0, 0);\r\n    }\r\n`;\t\r\n\r\nvar dec = function(b)\r\n\t{\r\n        var  z, v, vv;\r\n        b=16/b;\r\n\t\tfor(let k=0; k<l; ++k)\r\n\t\t{\r\n                 z = F[k];\r\n                  v = z*b;\r\n                 if(z > 0)\r\n\t\t\t\t {\r\n\t\t\t\t\tvv = 255-v;\r\n\t\t\t\t\tvv= (vv<40)?40:vv;\r\n\t\t\t\t    d32[k]=\r\n\t\t\t\t\t        255 << 24 \r\n                            |0 << 16 \r\n\t\t\t\t\t\t\t|G[k] << 8\r\n\t\t\t\t\t\t    |vv            \r\n                    \r\n                 }\r\n                 else\r\n\t\t\t\t  {\r\n\t\t\t\t\tvv = 255+v;\r\n\t\t\t\t\t vv= (vv<40)?40:vv;\r\n \t\t\t\t\t d32[k]=\r\n                            255 << 24   \r\n\t\t\t\t\t\t    |vv  << 16           \r\n                            |G[k] << 8\r\n\r\n                  }\r\n\t\t}\r\n        ctext.putImageData(imageData, 0, 0);\r\n    }\r\n\r\n    function ced(b)\r\n\t{\r\n        var  z, v, vv;\r\n\t\t  b=16*b;\r\n\t\tfor(let k=0; k<l; ++k)\r\n\t\t{\r\n                z = F[k];\r\n                 if(z > 0)\r\n\t\t\t\t {\r\n\t\t\t\t  v = z*b;\r\n\t\t\t\t   vv = v*256/(32+v);\r\n\t\t\t\t    if(vv<80)vv=80;\r\n//\t\t\t\t\tif(vv>255)vv=255;\r\n//\t\t\t\t    vv = (vv<80)?80:vv;\r\n\t\t    \t\t d32[k]=255 << 24   \r\n\t\t\t                |G[k] << 8\r\n\t\t\t\t\t\t    |vv             \r\n                 }\r\n                 else\r\n\t\t\t\t  {\r\n  \t\t\t\t   v = -z*b;\r\n\t\t\t\t   vv = v*256/(32+v);\r\n\t\t\t\t    if(vv<80)vv=80;\r\n//\t\t\t\t\tif(vv>255)vv=255;\r\n\t\t\t\t    //vv = (vv<80)?80:vv;\r\n\t\t    \t\t d32[k]=255 << 24   \r\n\t\t\t\t\t\t\t|vv << 16\r\n\t\t\t                |G[k] << 8\r\n\r\n                  }\r\n\t\t}\r\n        ctext.putImageData(imageData, 0, 0);\r\n    }\r\n    \r\n\tfunction  draw() \r\n\t{\r\n\t  if(mechecked)ced(b);\r\n      else dec(b); \r\n\t}\r\n\t\r\n  \r\n    function getb(){b = x1.value; }\r\n    function geta(){a = debug.value;}\r\n    function getabc()\r\n    {\r\n\t geta();\r\n     getb();\r\n     }\r\nfunction evalAndDraw()\r\n{    \r\n\r\n//cf.style.cursor=\"progress\"\r\n  getabc(); \r\n   preEval();\r\n    draw();  \r\n//  cf.style.cursor=\"auto\"\t\r\n}\r\n    \r\nfunction testKey(e)    \r\n{\r\n   if (e.keyCode == 13 || e.keyCode == 10){timeStop= true; clearInterval(myTime); evalAndDraw();}\r\n}\r\n\r\nfunction scalebAndDraw(s)\r\n{\r\n var b1;\r\n  b1=b*s; if(b1>0)b=b1; x1.value=\"\"+b;\r\n  getb(); draw();\r\n}\r\n\r\nfunction testThicknessKey(e)    \r\n{\r\n if(e.keyCode==37) scalebAndDraw(0.5);\r\n if(e.keyCode==39) scalebAndDraw(2  );\r\n \r\n}\r\n\r\n\r\nfunction testWheel(e)\r\n{\r\n e.preventDefault();\r\n if(e.deltaY>0) scalebAndDraw(3/4);\r\n if(e.deltaY<0) scalebAndDraw(4/3);\r\n return false;\r\n}\r\n\r\n\r\nfunction setDrawMethod(me)\r\n{\r\n  mechecked = me.checked;\r\n   draw();\r\n}\r\n\r\nfunction updateDataIf(e)\r\n{\r\n var s=\"\";\r\n var myeval = eval;\r\n if(e.keyCode==10 || e.keyCode==13) \r\n {\r\n   s = aData.value;\r\n\t\t  try{\r\n\t\t      myeval(s);\r\n\t\t\t }\r\n\t\t  catch(e){ aData.value+= (\" \"+e);} \r\n\r\n }\r\n}\r\n\r\n  function getMousePos(canvas, evt) {\r\n        var rect = canvas.getBoundingClientRect();\r\n        return {\r\n          x: evt.clientX - rect.left,\r\n          y: evt.clientY - rect.top\r\n        };\r\n      }\r\n\r\nvar divPanels = document.getElementById(\"divPanels\");\t   \t  \r\nfunction canvasMouseDown(e)\r\n{\r\n\t   divPanels.style.zIndex=-10;\r\n}\r\nfunction divPanelsEnter()\r\n{\r\n\t   divPanels.style.zIndex=10;\r\n}\r\n\r\nvar bsDiv = document.getElementById(\"box-shadow-div\");\r\nfunction moveDiv(event){\r\n               \r\n                var mx, my;\r\n    // On mousemove use event.clientX and event.clientY to set the location of the div to the location of the cursor:\r\n                    mx = event.clientX;\r\n                    my = event.clientY;               \r\nvar m = getMousePos(cf, event);\r\n             var y = -(m.y - h_2)/zm;\r\n             var x =  (m.x - w_2)/zm;\r\n                    if ( typeof mx !== 'undefined' )\r\n\t\t\t\t\t{\r\n                        bsDiv.style.left = mx +10 + \"px\";\r\n                        bsDiv.style.top = my - 10 + \"px\";\r\n\t\t\t\t\t\tbsDiv.innerHTML=\"\"+x.toPrecision(3)+ \", \"+y.toPrecision(3);\r\n                    }\r\n                //return false;\r\n            }\r\n\t\t\t\r\nfunction myTrim(x) {\r\n    return x.replace(/^\\s+|\\s+$/gm,'');\r\n}\r\n\r\nvar timeStop= true;\r\nvar t=0.0;\r\nvar _t0=0*1000;\r\nvar _t1=50*1000;\r\nvar _dt=100;\r\nvar myTime;\r\n\r\nfunction time(t0, t1)\r\n{\r\n  timeStop= false;\r\n  _t0=t0*1000;\r\n  _t1=t1*1000;\r\n   t=0; \r\n   if(t0>0)t=t0;\r\n   if(t1<0)t=t1;\r\n   myTime = setInterval(myTimer, _dt);\r\n   return t;\r\n}\r\n\r\n\r\n\r\nfunction myTimer() {\r\n     t+=_dt/1000;\r\n\t if(_dt>0)scalebAndDraw(30/29);\r\n\t if(_dt<0)scalebAndDraw(29/30);\r\n\t if(t*1000> _t1){t=_t1/1000; _dt=-_dt;}\r\n\t if(t*1000< _t0){t=_t0/1000; _dt=-_dt;}\r\n\t //console.log(\"t=%f\",t)\r\n\t //bsDiv.innerHTML= \"t=\"+t;\r\n\t \r\n   \r\n}\r\n\r\n</script>\r\n\r\n</body>\r\n</html>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}